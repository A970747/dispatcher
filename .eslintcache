[{"/home/a970747/coding/dispatcher/src/index.js":"1","/home/a970747/coding/dispatcher/src/App.js":"2","/home/a970747/coding/dispatcher/src/store/reducers/orderReducer.js":"3","/home/a970747/coding/dispatcher/src/store/reducers/routeReducer.js":"4","/home/a970747/coding/dispatcher/src/store/actions/orderAction.js":"5","/home/a970747/coding/dispatcher/src/store/actions/routeAction.js":"6","/home/a970747/coding/dispatcher/src/components/GenRoutes.js":"7","/home/a970747/coding/dispatcher/src/components/material-components/TabPanel.js":"8"},{"size":541,"mtime":1611687171153,"results":"9","hashOfConfig":"10"},{"size":9418,"mtime":1611687413186,"results":"11","hashOfConfig":"10"},{"size":370,"mtime":1611546189110,"results":"12","hashOfConfig":"10"},{"size":315,"mtime":1611326596894,"results":"13","hashOfConfig":"10"},{"size":708,"mtime":1611546152782,"results":"14","hashOfConfig":"10"},{"size":473,"mtime":1611546766023,"results":"15","hashOfConfig":"10"},{"size":6038,"mtime":1611625588294,"results":"16","hashOfConfig":"10"},{"size":488,"mtime":1611687137473,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cujjw6",{"filePath":"20","messages":"21","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/a970747/coding/dispatcher/src/index.js",[],"/home/a970747/coding/dispatcher/src/App.js",["36","37","38","39","40","41","42","43","44"],"/home/a970747/coding/dispatcher/src/store/reducers/orderReducer.js",[],["45","46"],"/home/a970747/coding/dispatcher/src/store/reducers/routeReducer.js",[],"/home/a970747/coding/dispatcher/src/store/actions/orderAction.js",[],"/home/a970747/coding/dispatcher/src/store/actions/routeAction.js",[],"/home/a970747/coding/dispatcher/src/components/GenRoutes.js",["47","48","49","50","51"],"import React, {useEffect, useState} from 'react';\nimport {addRoute} from '../store/actions/routeAction'\nimport {deleteAllOrders} from '../store/actions/orderAction'\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Button, ButtonGroup} from '@material-ui/core';\n\nfunction GenRoutes({orderMap, removeOrders}) {\n  const [indexes, setIndexes] = useState([]);\n  const [result, setResult] = useState([]);\n  const [route, setRoute] = useState('');\n  const [stopsArray, setStopsArray] = useState([]);\n  const [polylineArray, setPolylineArray] = useState([]);\n  const orders = useSelector(state => state.orders);\n  const routes = useSelector(state => state.routes);\n  const dispatch = useDispatch();\n\n  useEffect(() => {if(orders.length > 0) calcStraightLineDist()}, [orders]);\n\n  useEffect(() => {\n    let tempArray = [];\n    orders.forEach((each, index) => tempArray.push(index))\n    setIndexes(tempArray);\n  }, [orders])\n\n  useEffect(() => {\n    mapRoutes(routes);\n  }, [routes])\n\n  async function optimize() {\n    let tempArray = [...indexes];\n    let result = getPermutations(tempArray);\n    let shortest = getShortest(result);\n    let newRoute = await drawRoute(result[shortest.index]);\n    let stops = getStops(result[shortest.index])\n    setRoute(newRoute);\n    setStopsArray(stops);\n    setResult(result);\n  }\n\n  function createRoute() {\n    let routeObj = {};\n    routeObj.path = stopsArray;\n    routeObj.route = route;\n    routeObj.orders = orders;\n\n    dispatch(addRoute(routeObj));\n    dispatch(deleteAllOrders())\n    removeOrders();\n  }\n\n  function getPermutations(array) {\n    let ret = [];\n  \n    for (let i = 0; i < array.length; i = i + 1) {\n      let rest = getPermutations(array.slice(0, i).concat(array.slice(i + 1)));\n  \n      if(!rest.length) {\n        ret.push([array[i]])\n      } else {\n        for(let j = 0; j < rest.length; j = j + 1) {\n          ret.push([array[i]].concat(rest[j]))\n        }\n      }\n    }\n    return ret\n  };\n  \n  function getShortest(result) {\n    const length = indexes.length;\n    const distArray = [];\n\n    const distMap = new Map();\n    orders.forEach( (each, index) => {\n      distMap.set(index, each.strtLnDist);\n    })\n    \n    for(let i = 0; i < result.length; i++) {\n      const totalDist = result[i].reduce((accum, curr, index, arr) => {\n        let total = 0;\n        if(distMap.has(curr)) total += distMap.get(curr);\n        if(index + 1 < length) {\n          const next = '' + curr + arr[index + 1];\n          if(distMap.has(next)) {\n            total += distMap.get(next)\n          } else {\n            const dist = calcStraightLineDist(orders[curr].destination.geoInfo, orders[arr[index + 1]].origin.geoInfo)\n            distMap.set(next, dist);\n            total += dist;\n          }\n        }\n        return accum + total;\n      }, 0)\n      distArray.push(totalDist);\n    };\n\n    let singleResult = distArray.reduce((accum, curr, index) => {\n      if(index == 0) return {dist: curr, index};\n      if(accum.dist > curr) return {dist: curr, index};\n      return accum;\n    }, {});\n    \n    return singleResult\n  }\n\n  function drawRoute(shortestRoute) {\n    const latLngSet = [];\n    for(let i = 0; i < shortestRoute.length; i++){\n      latLngSet.push(new window.google.maps.LatLng(orders[shortestRoute[i]].origin.geoInfo));\n      latLngSet.push(new window.google.maps.LatLng(orders[shortestRoute[i]].destination.geoInfo))\n    }\n    const wayPoints = latLngSet\n      .filter((item, i) => (i !== 0 && i !== (latLngSet.length -1)))\n      .map( item => { return {location: item, stopover: false}})\n\n    const directionsService = new window.google.maps.DirectionsService();\n\n    let req = {\n      origin: latLngSet[0],\n      destination: latLngSet[latLngSet.length - 1],\n      waypoints: wayPoints,\n      optimizeWaypoints: false,\n      travelMode: 'DRIVING'\n    }\n    \n    return new Promise((resolve, reject) => {\n      directionsService.route(req, (res, status) => {\n        if(status==='OK') {\n          resolve(res.routes[0].overview_polyline)\n        } else {\n          reject(status);\n        }\n      })\n    })\n  }\n\n  function getStops(route) {\n    const stopsArray = [];\n    for(let i = 0; i < route.length; i++){\n      stopsArray.push(orders[route[i]].origin.full_address);\n      stopsArray.push(orders[route[i]].destination.full_address);\n    }\n\n    const filteredStops = stopsArray.filter((stop, index) => {\n      if(index > 0) {\n        if(stop !== stopsArray[index - 1]) return stop;\n      } else { \n        return stop \n      };\n    })\n\n    return filteredStops;\n  }\n\n  function mapRoutes(routes) {\n    removeRoutePolylines();\n    let polycopy = []\n    routes.forEach(route => {\n      const decodedPath = new window.google.maps.geometry.encoding.decodePath(route.route);\n      let polyline = new window.google.maps.Polyline({\n        path: decodedPath,\n        strokeColor: route.color,\n        strokeOpacity: 1.0,\n        strokeWeight: 3,\n      });\n      polyline.setMap(orderMap);\n      polycopy.push(polyline);\n    })\n    setPolylineArray(polycopy);\n  }\n\n  function removeRoutePolylines() {\n    polylineArray.forEach(each => {\n      each.setMap(null);\n    });\n  }\n\n  function toggleRoutePolylines() {\n    polylineArray.forEach(polyline => {\n      (polyline.visible == false) ? polyline.setVisible(true) : polyline.setVisible(false)\n    });\n  }\n\n  function calcStraightLineDist(start, end) {\n    const origin = new window.google.maps.LatLng(start);\n    const dest = new window.google.maps.LatLng(end);\n\n    let distance = window.google.maps.geometry.spherical.computeDistanceBetween(origin, dest);\n    let kms  = distance/1000;\n    \n    return kms\n  }\n\n  return (\n    <ButtonGroup color=\"primary\" variant=\"contained\">\n      <Button onClick={() => optimize()}>1. run the algorithm</Button>\n      <Button onClick={() => createRoute()}>2. create route</Button>\n      <Button onClick={() => toggleRoutePolylines()}>hide routes</Button>\n      <Button onClick={() => removeRoutePolylines()}>remove routes</Button>\n    </ButtonGroup>\n  );\n}\n\nexport default GenRoutes;","/home/a970747/coding/dispatcher/src/components/material-components/TabPanel.js",["52"],{"ruleId":"53","severity":1,"message":"54","line":9,"column":8,"nodeType":"55","messageId":"56","endLine":9,"endColumn":11},{"ruleId":"53","severity":1,"message":"57","line":30,"column":9,"nodeType":"55","messageId":"56","endLine":30,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":61,"column":6,"nodeType":"60","endLine":61,"endColumn":16,"suggestions":"61"},{"ruleId":"58","severity":1,"message":"62","line":65,"column":6,"nodeType":"60","endLine":65,"endColumn":19,"suggestions":"63"},{"ruleId":"58","severity":1,"message":"64","line":69,"column":6,"nodeType":"60","endLine":69,"endColumn":17,"suggestions":"65"},{"ruleId":"58","severity":1,"message":"66","line":73,"column":6,"nodeType":"60","endLine":73,"endColumn":14,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":210,"column":20,"nodeType":"70","messageId":"71","endLine":210,"endColumn":22},{"ruleId":"68","severity":1,"message":"69","line":230,"column":25,"nodeType":"70","messageId":"71","endLine":230,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":282,"column":1,"nodeType":"74","messageId":"75","endLine":289,"endColumn":12},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"53","severity":1,"message":"80","line":9,"column":10,"nodeType":"55","messageId":"56","endLine":9,"endColumn":16},{"ruleId":"58","severity":1,"message":"81","line":27,"column":6,"nodeType":"60","endLine":27,"endColumn":14,"suggestions":"82"},{"ruleId":"68","severity":1,"message":"69","line":97,"column":16,"nodeType":"70","messageId":"71","endLine":97,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":143,"column":59,"nodeType":"85","messageId":"86","endLine":143,"endColumn":61},{"ruleId":"68","severity":1,"message":"69","line":179,"column":25,"nodeType":"70","messageId":"71","endLine":179,"endColumn":27},{"ruleId":"53","severity":1,"message":"87","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":18},"no-unused-vars","'app' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAutoComplete'. Either include it or remove the dependency array.","ArrayExpression",["88"],"React Hook useEffect has a missing dependency: 'originMarker'. Either include it or remove the dependency array.",["89"],"React Hook useEffect has a missing dependency: 'destMarker'. Either include it or remove the dependency array.",["90"],"React Hook useEffect has a missing dependency: 'mapOrders'. Either include it or remove the dependency array.",["91"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["92"],"no-negated-in-lhs",["93"],"'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'mapRoutes'. Either include it or remove the dependency array.",["94"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Typography' is defined but never used.",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [orderMap, setAutoComplete]",{"range":"105","text":"106"},"Update the dependencies array to be: [originMarker, originPlace]",{"range":"107","text":"108"},"Update the dependencies array to be: [destMarker, destPlace]",{"range":"109","text":"110"},"Update the dependencies array to be: [mapOrders, orders]",{"range":"111","text":"112"},"Update the dependencies array to be: [mapRoutes, routes]",{"range":"113","text":"114"},[1754,1764],"[orderMap, setAutoComplete]",[1840,1853],"[originMarker, originPlace]",[1925,1936],"[destMarker, destPlace]",[1981,1989],"[mapOrders, orders]",[977,985],"[mapRoutes, routes]"]